To use:
1. Run MatLab code and generate the input file to python code
2. Run Python code and generate the KLayout file.

On running MatLab code:
1. Change the electrodes length and width definitions for the electrodes, if needed. More notes below
2. Follow the prompts as they show up. Remember the order of corners when you click them (starts with 1) as you will be prompted to enter the two that will serve as the main electrode axis.

On running Python code:
1. Open KLayout Macro development, under "python", create a new "general macro (.lym)" file, paste the entire python code into the file;
2. Modify the input and output paths and file names given at the top of the code;
3. Modify route width, drawing layer, and the end electrodes width if needed;
4. Save and run the file in KLayout.

On opening the file in KLayout:
1. Open the silicon die template file in KLayout
2. While template file opened, go to "file -> open" again and open the file just generated by the code
3. Choose "add to current panel" when prompted

Things to note in MatLab code:
1. Electrodes width and length definitions are messed up. The value you enter will undergo transformations along with other shape objects and become some different value. May require some trial-and-error to find the right value.
2. Image does not display the order in which you clicked the corners, which can be hard to use since you have to remember it.

Things to note in Python code:
1. Routing modes are limited. Function docstrings in the code points to where they may be modified and improved
2. See details in routing main code docstring. Routing makes assumptions about which coordinates corresponds to nanostructure and electrodes, but these assumptions can actually be removed by interpreting the input file (from MatLab) differently, since the file indicates which coordinates are nanostructure and which are electrodes (right now these text indications are being ignored)
